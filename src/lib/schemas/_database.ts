/*
 * ==========================================
 * |          GENERATED BY SUPAZOD          |
 * ==========================================
 */

import { z } from "zod";
import { type Json } from "./database.types";

export const jsonSchema: z.ZodSchema<Json> = z.lazy(() =>
  z
    .union([
      z.string(),
      z.number(),
      z.boolean(),
      z.record(z.union([jsonSchema, z.undefined()])),
      z.array(jsonSchema),
    ])
    .nullable(),
);

export const iconRowSchema = z.object({
  created_at: z.string(),
  id: z.number(),
  name: z.string(),
  provider_id: z.number(),
  source_url: z.string(),
  svg: z.string(),
  version: z.string(),
});

export const iconInsertSchema = z.object({
  created_at: z.string(),
  id: z.number().optional(),
  name: z.string(),
  provider_id: z.number(),
  source_url: z.string(),
  svg: z.string(),
  version: z.string(),
});

export const iconUpdateSchema = z.object({
  created_at: z.string().optional(),
  id: z.number().optional(),
  name: z.string().optional(),
  provider_id: z.number().optional(),
  source_url: z.string().optional(),
  svg: z.string().optional(),
  version: z.string().optional(),
});

export const iconRelationshipsSchema = z.tuple([
  z.object({
    foreignKeyName: z.literal("icon_provider_id_fkey"),
    columns: z.tuple([z.literal("provider_id")]),
    isOneToOne: z.literal(false),
    referencedRelation: z.literal("provider"),
    referencedColumns: z.tuple([z.literal("id")]),
  }),
]);

export const providerRowSchema = z.object({
  created_at: z.string(),
  git_branch: z.string(),
  git_icons_dir: z.string(),
  git_url: z.string(),
  id: z.number(),
  name: z.string(),
});

export const providerInsertSchema = z.object({
  created_at: z.string().optional(),
  git_branch: z.string(),
  git_icons_dir: z.string(),
  git_url: z.string(),
  id: z.number().optional(),
  name: z.string(),
});

export const providerUpdateSchema = z.object({
  created_at: z.string().optional(),
  git_branch: z.string().optional(),
  git_icons_dir: z.string().optional(),
  git_url: z.string().optional(),
  id: z.number().optional(),
  name: z.string().optional(),
});
